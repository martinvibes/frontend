name: Run tests

on:
  pull_request:
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
  issues: read
  packages: none

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.10.0'

      - name: Install dependencies
        run: yarn install

      - name: Build app
        run: yarn build

  test-app:
    env:
      NEXT_PUBLIC_BACKEND_URL: ${{vars.NEXT_PUBLIC_BACKEND_URL}}
      NEXT_PUBLIC_SOROSWAP_BACKEND_API_KEY: ${{secrets.NEXT_PUBLIC_SOROSWAP_BACKEND_API_KEY}}
      NEXT_PUBLIC_SOROSWAP_BACKEND_URL: ${{vars.NEXT_PUBLIC_SOROSWAP_BACKEND_URL}}
      NEXT_PUBLIC_DEFAULT_NETWORK: ${{vars.NEXT_PUBLIC_DEFAULT_NETWORK}}
      NEXT_PUBLIC_TRUSTLINE_WALLET_PUBLIC_KEY: ${{vars.NEXT_PUBLIC_TRUSTLINE_WALLET_PUBLIC_KEY}}
      NEXT_PUBLIC_TEST_TOKENS_ADMIN_SECRET_KEY: ${{secrets.NEXT_PUBLIC_TEST_TOKENS_ADMIN_SECRET_KEY}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.10.0'

      - name: Install cypress
        run: yarn cypress install --force

      - name: Run app
        run: yarn pm2 start next

      - name: Run test
        run: yarn cy:run
